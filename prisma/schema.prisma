// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  password String
  History  History[]
  Question Question[]
}

model Question {
  id          Int           @id @default(autoincrement())
  question    String
  type        String
  options     Answer[]
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  history     History[]
  QuestionTag QuestionTag[]
}

model Tag {
  id          Int           @id @default(autoincrement())
  value       String        @unique
  QuestionTag QuestionTag[]
}

model QuestionTag {
  id         Int      @id @default(autoincrement())
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
}

model Answer {
  id            Int          @id @default(autoincrement())
  question      Question     @relation(fields: [questionId], references: [id])
  questionId    Int
  answer        String
  answerApplies Boolean?
  userAnswer    UserAnswer[]
}

model History {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  question    Question     @relation(fields: [questionId], references: [id])
  questionId  Int
  userAnswer  UserAnswer[]
  createdDate DateTime     @default(now())
}

model UserAnswer {
  id                Int      @id @default(autoincrement())
  history           History  @relation(fields: [historyId], references: [id])
  historyId         Int
  answer            Answer   @relation(fields: [answerId], references: [id])
  answerId          Int
  userAnswer        String?
  userAnswerApplies Boolean?
  order             Int?
}
